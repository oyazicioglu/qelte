@use '../styles/theme/theme';
@use '../styles/theme/component-colors';

.qei-preloader {
	position: absolute;
	left: 0;
	right: 0;
	bottom: 0;
	top: 0;
	margin: auto;
	background-color: inherit;
	z-index: 9999;

	&.position-fixed {
		position: fixed;
	}

	&.show-background.color-default {
		background-color: map-get($map: theme.$themeColors, $key: 'paper');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$themeColors, $key: 'primaryText');
		}
	}

	&.show-background.color-primary {
		background-color: map-get($map: theme.$primaryColors, $key: 'bg');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$primaryColors, $key: 'fg');
		}
	}

	&.show-background.color-accent {
		background-color: map-get($map: theme.$accentColors, $key: 'bg');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$primaryColors, $key: 'fg');
		}
	}

	&.show-background.color-warning {
		background-color: map-get($map: theme.$alertColors, $key: 'warning');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$primaryColors, $key: 'fg');
		}
	}

	&.show-background.color-success {
		background-color: map-get($map: theme.$alertColors, $key: 'success');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$primaryColors, $key: 'fg');
		}
	}

	&.show-background.color-info {
		background-color: map-get($map: theme.$alertColors, $key: 'info');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$primaryColors, $key: 'fg');
		}
	}

	&.show-background.color-danger {
		background-color: map-get($map: theme.$alertColors, $key: 'danger');
		.qei-spinner .loader {
			border-left-color: map-get($map: theme.$primaryColors, $key: 'fg');
		}
	}
}
